URGENT:


// F90 //

optimisation stuff....
Fix Hessian update scheme so that Quasi-Newton methods can be used
Fix constraints in angles and dihedrals
Fix check_constrained_atoms.f90 so that it actually works for primitive

primitive stuff...
If the number of traditional primitives is < 3N-6, then flag an error, save the primitives, and say to add additional primitives
Where there are complicated allocation schemes, allocate matrices to be much bigger than they need to
Don't use zero_count, introduce a new prim_type(nprims) array instead
Improve gen_prims_full to generate valence and dihedral angles better such that duplicates are not added
Add link atoms to neighbours array in generating primitives

others...
Allocate important arrays outwith subroutines (not functions), and don't pass too much (or anything) to subroutines
Merge gsm.in and qommma.in into one file


// PYTHON //

Remove all the GSM running code from qommma.py and add to functions SE_gsm() and DE_gsm() in gsmutil.py


LATER:

Integrate all the DLC work into MECP code

Allow for GSM with cartesian coordinates

Remove NEB from F90 and create nebutil.py like gsmutil.py
Integrate all the DLC work into NEB code

Create adiabatic mapping procedures in adiabutil.py like gsmutil.py and nebutil.py

Create single-point energy evaluation protocols

Create automatic generation of driving coordinates: machine learning? chemical networks? collective variables?

Update manual, readme, qomdoc
